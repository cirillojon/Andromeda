services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URI=postgresql://postgres:postgres@postgres:5432/home_improvement
    networks:
      - default
    depends_on:
      postgres:
        condition: service_healthy
    command: ["--workers=1", "--bind=0.0.0.0:8000", "--log-level=debug", "--reload"]

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app # Ensure local changes are reflected in the container
      - node_modules:/app/node_modules # Keep node_modules on the container
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    networks:
      - default
    command: npm run dev

  postgres:
    # image: postgres:latest # uncomment and remove build if you want default db
    build:
      context: postgres
      dockerfile: Dockerfile
    volumes:
      # - ./postgres/data:/var/lib/postgresql/data # delete ./postgres/data for wiping data
      - pg_data:/var/lib/postgresql/data # aliased volume
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/home-improvement.conf:/etc/nginx/sites-available/home-improvement
      - ./nginx/home-improvement.conf:/etc/nginx/sites-enabled/home-improvement
    depends_on:
      - backend

volumes:
  node_modules:
  pg_data:
networks:
  default:
    driver: bridge
