"""battery fields

Revision ID: e753b74bc1ba
Revises: e4615c6740c6
Create Date: 2024-06-17 16:29:52.125665

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e753b74bc1ba'
down_revision = 'e4615c6740c6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project')
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.add_column(sa.Column('roof_stories', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('battery_current_solar_system_size', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('battery_expected_usage', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('battery_number_of_evs', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('battery_house_type', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('battery_ownership', sa.String(length=255), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_column('battery_ownership')
        batch_op.drop_column('battery_house_type')
        batch_op.drop_column('battery_number_of_evs')
        batch_op.drop_column('battery_expected_usage')
        batch_op.drop_column('battery_current_solar_system_size')
        batch_op.drop_column('roof_stories')

    op.create_table('project',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('project_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('project_address', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('roof_sqft', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('project_type', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('installer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('site_survey_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('inspection_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('install_start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('financing_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('financing_detail_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hvac_details', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('solar_electric_bill_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('solar_panel_amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('solar_panel_wattage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('solar_yearly_kwh', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('solar_battery_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('solar_microinverter', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('roof_angle', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('roof_current_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('roof_new_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('roof_current_health', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('roof_stories', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('battery_current_solar_system_size', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('battery_expected_usage', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('battery_number_of_evs', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('battery_house_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('battery_ownership', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['financing_detail_id'], ['financing_details.id'], name='project_financing_detail_id_fkey'),
    sa.ForeignKeyConstraint(['financing_type_id'], ['financing_options.id'], name='project_financing_type_id_fkey'),
    sa.ForeignKeyConstraint(['installer_id'], ['installers.id'], name='project_installer_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='project_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_pkey')
    )
    # ### end Alembic commands ###
